name: Build & Test

on: [push]

jobs:
  build-sling:
    if: "! contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v2

    - name: Set up GoLang
      uses: actions/setup-go@v1
      with:
        go-version: '1.15.2'

    - name: Sync g
      run: |
        rm -rf ../g
        cp -r /__/devbox/g ../
  
    - name: Build Server, Worker, Sling
      run: |
        export WORK_FOLDER=/__/work/${GITHUB_RUN_NUMBER}
        mkdir -p $WORK_FOLDER
        cp -r ../g $WORK_FOLDER/g
        cp -r . $WORK_FOLDER/sling
        docker run --rm -v /__/docker-data/devbox/root/go:/root/go -v /__:/__ -v $WORK_FOLDER:/work --workdir /work/sling flarco/devbox bash scripts/build.sh
        rm -rf $WORK_FOLDER

  
  test:
    if: "! contains(github.event.head_commit.message, '[skip ci]')"
    
    needs: [build-sling]

    runs-on: self-hosted
    
    steps:
        
    - uses: actions/checkout@v2

    # Use devbox 
    # - name: Set up GoLang
    #   uses: actions/setup-go@v1
    #   with:
    #     go-version: '1.15.2'

    - name: Sync g
      run: cp -r /__/devbox/g ../
  
    - name: Run Go Tests
      run: |
        source /root/.bashrc
        env
        source /__/devbox/.env.sh
        echo $PATH
        bash scripts/test.sh

  push:
    needs: [build-sling, test]
    runs-on: self-hosted

    steps:
    - name: Push Docker
      run: |
        cp /__/bin/sling .
        
        docker login -u slingdata -p "${{ secrets.DOCKER_PASSWORD }}"

        docker build -t slingdata-io/sling:${GITHUB_RUN_NUMBER} -f cmd/sling/Dockerfile .
        docker push slingdata-io/sling:${GITHUB_RUN_NUMBER}

        rm -rf webapp

  stage:
    needs: push
    runs-on: self-hosted

    steps:
    - name: Stage
      run: |
        echo "Staging -> tag ${GITHUB_RUN_NUMBER}"
        docker login -u slingdata -p "${{ secrets.DOCKER_PASSWORD }}"

        cd /__/devbox
        source .env.sh
        # docker-compose pull
        docker-compose up -d --build
    