name: Test

on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'

jobs:
  test:
    if: "! (contains(github.event.head_commit.message, '[skip ci]') || contains(github.event.head_commit.message, '[no test]'))"

    runs-on: [self-hosted, linux]
    timeout-minutes: 15

    steps:
    - uses: actions/checkout@v2

    - name: Dump context
      env:
        JOB_CONTEXT: ${{ toJson(job) }}
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: |
        echo "JOB_CONTEXT -> $JOB_CONTEXT"
        echo "MATRIX_CONTEXT -> $MATRIX_CONTEXT"
        echo "RUNNER_CONTEXT -> $RUNNER_CONTEXT"

    - name: Set up GoLang
      uses: actions/setup-go@v3
      with:
        go-version: "1.19"
        
    # - uses: actions/cache@v3
    #   with:
    #     path: ~/go/pkg/mod
    #     key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
    #     restore-keys: |
    #       ${{ runner.os }}-go

    - name: Test
      env:
        ENVKEY: ${{ secrets.ENVKEY }}
      run: |
        /__/bin/envkey-source -f > .env
        sed -i "s/DEBUG='TRUE'/DEBUG=''/g" .env

        docker run --rm -v /__/docker-data/devbox/root/go:/root/go -v /__:/__ -v /tmp:/tmp -v $PWD:/work --workdir /work flarco/devbox:base bash -c "source .env && go mod edit -dropreplace='github.com/flarco/g' go.mod && go mod tidy && bash scripts/test.sh"

    
        